<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 这里填写对应的Dao文件所在的路径 -->
<mapper namespace="com.nyzs.eduonline.dao.DocDao"    >
    <!-- 填写数据库里对应的表的表名 -->
    <!-- 这里是作为一个变量使用 -->
    <sql id="table">doc_file_info</sql>

    <resultMap type="com.nyzs.eduonline.bean.dto.DocFileInfoDto" id="docFileInfoDtoMap">
        <id column="id" property="id"/>
        <result column="doc_file_name" property="docFileName"/>
        <result column="unit" property="unit"/>
        <result column="position" property="position"/>
        <result column="storage_path" property="storagePath"/>
        <result column="upload_date" property="uploadDate"/>

    </resultMap>

    <resultMap type="com.nyzs.eduonline.bean.dto.DocFileInfoDto" id="docFileInfoDtoMap1">
        <id column="id" property="id"/>
        <result column="doc_file_name" property="docFileName"/>
        <result column="unit" property="unit"/>
        <result column="position" property="position"/>
        <result column="doc_storage_path" property="storagePath"/>
        <result column="last_update_date" property="uploadDate"/>
    </resultMap>


    <!--    根据岗位、文档类别or文档标题查询-->
    <select id="getDocByPosOrTitle" parameterType="String" resultType="com.nyzs.eduonline.bean.dto.DocFileInfoDto" resultMap="docFileInfoDtoMap1">
        select
            id,
            unit,
            position,
            doc_file_name,
            doc_storage_path,
            last_update_date
        from
        page_info pi
        <where>
            <if test="pos!=null and pos!='' ">
                pi.position LIKE CONCAT(CONCAT('%', #{pos}),'%')
            </if>
            <if test="title!= null and title!= '' ">
                AND pi.doc_file_name LIKE CONCAT(CONCAT('%', #{title}),'%')
            </if>
        </where>

    </select>

    <insert id="addDocInfo" parameterType="com.nyzs.eduonline.bean.dto.DocFileInfoDto">
        insert into
            doc_file_info
            (
                id,
                unit,
                position,
                doc_file_name,
                storage_path,
                upload_date
            )
        values (
                id,
                #{unit},
                #{position},
                #{docFileName},
                #{storagePath},
                DATE_FORMAT(NOW(), '%Y-%m-%d')
               )
    </insert>

    <delete id="deleteDocInfo" parameterType="Integer">
        delete from
            doc_file_info
        where
            id = #{id}
    </delete>

    <!--&lt;!&ndash; id属性填写Dao文件里的函数名称 xxType是参数或是结果的类型根据情况填写 &ndash;&gt;
    &lt;!&ndash; 查询所有   &ndash;&gt;
    <select id="getExamDate" resultType="String">
        SELECT
            exam_date
        from
            exam_date
        where id = (select max(id) from exam_date)
    </select>

    &lt;!&ndash;   查考试状态&ndash;&gt;
    <select id="getExamStatus" resultType="com.nyzs.examonline.bean.EmployeeGrades" resultMap="employeeGradesMap">
        SELECT
            *
        FROM
            employee_grades
        WHERE
            employee_num = #{num}
        AND
            exam_date = #{examdate}
    </select>

    &lt;!&ndash;    生成10道题的试卷&ndash;&gt;
    <insert id="generateExamPaper" parameterType="String">

	    insert into
		    exam_paper_generate_date(question_idx, question_content, answer, exam_date)
            (select question_idx, question_content, answer, #{examdate} from exam_paper_total ORDER BY RAND() LIMIT 6)
            UNION
            (select question_idx, question_content, answer, #{examdate} from exam_paper_item_culture ORDER BY RAND() LIMIT 2)
            UNION
            (select question_idx, question_content, answer, #{examdate} from exam_paper_item_rule ORDER BY RAND() LIMIT 2);
    </insert>

    &lt;!&ndash; insert into
    exam_paper_generate_date
    select
    question_idx,
    question_content,
    answer,
    #{examdate}
    from
    exam_paper_total
    ORDER BY
    RAND() LIMIT 10; &ndash;&gt;

    &lt;!&ndash; 查询试卷   &ndash;&gt;
    <select id="getExamPaperByExamDate" resultType="com.nyzs.examonline.bean.ExamPaper" resultMap="examPaperMap">
        select
            *
        from
            exam_paper_generate_date
        where
            exam_date = #{examdate}
    </select>

    &lt;!&ndash;    修改考试期数&ndash;&gt;
    <insert id="updateExamDate" parameterType="String">
        insert into
            exam_date
        values
            (id, #{examdate})
    </insert>

    &lt;!&ndash; 登记成绩   &ndash;&gt;
    <insert id="recordGrades" parameterType="com.nyzs.examonline.bean.EmployeeGrades">
        INSERT INTO
            employee_grades
            (id, employee_num, employee_name, exam_date, grades)
        VALUES
            (id,#{employeeNum},#{employeeName},#{examDate},#{grades})
    </insert>

    &lt;!&ndash;    获得所有员工的成绩&ndash;&gt;
    <select id="getAllGrades" resultType="com.nyzs.examonline.bean.EmployeeGrades" resultMap="employeeGradesMap">
        select
            *
        from
            employee_grades
    </select>

    &lt;!&ndash;    根据姓名获得员工成绩&ndash;&gt;
    <select id="getGradesByName" parameterType="String" resultType="com.nyzs.examonline.bean.EmployeeGrades" resultMap="employeeGradesMap">
        select
            *
        from
            employee_grades
        where
            employee_name = #{name}
    </select>

    &lt;!&ndash;    根据姓名or考试日期获得员工成绩&ndash;&gt;
    <select id="getGradesByNameOrExamDate" parameterType="String" resultType="com.nyzs.examonline.bean.EmployeeGrades" resultMap="employeeGradesMap">
        select
            *
        from
            employee_grades eg
        <where>
            <if test="examDate!=null and examDate!='' ">
                eg.exam_date LIKE CONCAT(CONCAT('%', #{examDate}),'%')
            </if>
            <if test="name!= null and name!= '' ">
                AND eg.employee_name = #{name}
            </if>
        </where>

    </select>-->
</mapper>